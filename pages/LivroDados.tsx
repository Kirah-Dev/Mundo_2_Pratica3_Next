import type { NextPage } from "next";
import React, { useState } from "react";
import { useRouter } from "next/navigation";
import styles from "../styles/Home.module.css";
import ControleEditora from "../classes/controle/ControleEditora";
import Livro from "../classes/modelo/Livro";
import Head from "next/head";
import { Menu } from "../componentes/Menu";

const LivroDados: NextPage = () => {
  const controleEditora = new ControleEditora();
  const baseURL = "http://localhost:3000/api/livros";
  const router = useRouter();

  const [titulo, setTitulo] = useState("");
  const [resumo, setResumo] = useState("");
  const [autores, setAutores] = useState("");
  const [codEditora, setCodEditora] = useState(0);

  const opcoes = controleEditora.getEditoras().map((editora) => ({
    value: editora.codEditora,
    text: editora.nome,
  }));

  const incluirLivro = async (livro: Livro) => {
    const response = await fetch(baseURL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(livro),
    });
    return response.ok;
  };

  const tratarCombo = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setCodEditora(parseInt(event.target.value, 10));
  };

  const incluir = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const livro = new Livro(0, titulo, resumo, autores.split("\n"), codEditora);
    const sucesso = await incluirLivro(livro);
    if (sucesso) {
      router.push("/LivroLista");
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Dados do Livro</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.header}>
        <Menu />
      </div>
      <main className={styles.main}>
        <h1 className={styles.title}>Dados do Livro</h1>
        <form onSubmit={incluir}>
          <div className="mb-3">
            <label htmlFor="titulo" className="form-label">
              TÃ­tulo:
            </label>
            <input
              type="text"
              className="form-control"
              id="titulo"
              value={titulo}
              onChange={(e) => setTitulo(e.target.value)}
            />
          </div>
          <div className="mb-3">
            <label htmlFor="resumo" className="form-label">
              Resumo:
            </label>
            <textarea
              className="form-control"
              id="resumo"
              rows="3"
              value={resumo}
              onChange={(e) => setResumo(e.target.value)}
            ></textarea>
          </div>
          <div className="mb-3">
            <label htmlFor="autores" className="form-label">
              Autores:
            </label>
            <textarea
              className="form-control"
              id="autores"
              rows="3"
              value={autores}
              onChange={(e) => setAutores(e.target.value)}
            ></textarea>
          </div>
          <div className="mb-3">
            <label htmlFor="codEditora" className="form-label">
              Editora:
            </label>
            <select
              className="form-select"
              id="codEditora"
              value={codEditora}
              onChange={tratarCombo}
            >
              {opcoes.map((opcao) => (
                <option key={opcao.value} value={opcao.value}>
                  {opcao.text}
                </option>
              ))}
            </select>
          </div>
          <button type="submit" className="btn btn-primary">
            Incluir
          </button>
        </form>
      </main>
    </div>
  );
};

export default LivroDados;
